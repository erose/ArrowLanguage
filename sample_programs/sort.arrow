pass(ref array, ref trace){
    for i := 0 {
        if (array[i] > array[i+1]){
            array[i] <=> array[i+1]

            trace.push(i)
            trace.push(i + 1)

        } => trace.peek() == i + 1
    } i += 1, until i == array.size() - 1
}

check(const array){
    do/undo {
        counter := 0
        for i := 0 {
            if array[i] < array[i+1] {
                counter += 1
            } <=>
        } i += 1, until i == array.size() - 1
    }
    yielding {
        if counter == array.size() - 1 {
            result 1
        } <=>
        else {
            result 0
        }
    }
}

sort(ref array, ref trace){
    from trace.peek() == -1 {
        pass(&array, &trace)
    } until check(array) == 1
}

main(
A := [3, 8, 7, 3, 2],
trace := [-1]
){
    sort(&A, &trace)
}